@import url(https://fonts.googleapis.com/css?family=Raleway:300,400,600);

body {
  background: #ECE9E6;
  /* fallback for old browsers */
  background: -webkit-linear-gradient(to left, #ECE9E6, #FFFFFF);
  /* Chrome 10-25, Safari 5.1-6 */
  background: -webkit-linear-gradient(right, #ECE9E6, #FFFFFF);
  background: linear-gradient(to left, #ECE9E6, #FFFFFF);
  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
}

.main-content {
  margin-top: 50px;
}

.front-logo-container {
  background: #222222;
  width: 40%;
}

.box-post {
  -webkit-transition: .2s;
  transition: .2s;
}

.box-post a {
  color: inherit;
}

.box-post:hover {
  background: #efefef;
}

.nav {
  background: #222222;
}

.banner {
  background: url(/images/banner.jpg?ccaed6385f81cfdeaaf777894bf4622c);
}

.media-type img {
  padding: 5px;
}

.media-post {
  background: white;
  box-shadow: 0px 0px 5px 1px black;
  padding: 23px;
}

.media-post-comment {
  margin-left: 25px;
}

.media-question img {
  width: 100%;
  background: #fedde1;
}

.media-answer img {
  width: 50%;
  background: #ed5fBB;
}

.media-accepted img {
  width: 80%;
  background: #34deaa;
}

.form-comment-hidden {
  display: none;
}

code {
  display: block;
}

/*
  icons styling
*/

.button-group {
  padding: 20px 20px 20px 0px;
}

.vote-group {
  margin-top: -15px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.vote-group .fa {
  cursor: pointer;
}

.fa-arrow-down {
  color: red;
}

.fa-arrow-up {
  color: green;
}

.pagination ul {
  margin-left: 0px;
}

.pagination ul li {
  list-style: none;
}

form {
  display: block;
  width: 100%;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRTpcXENvZGVcXEZvcmtzXFxrbmJcXHJlc291cmNlc1xcYXNzZXRzXFxzYXNzXFxhcHAuc2NzcyIsInNvdXJjZXMiOlsiL0NvZGUvRm9ya3Mva25iL3Jlc291cmNlcy9hc3NldHMvc2Fzcy9hcHAuc2NzcyIsIi9Db2RlL0ZvcmtzL2tuYi9yZXNvdXJjZXMvYXNzZXRzL3Nhc3MvX3ZhcmlhYmxlcy5zY3NzIl0sInNvdXJjZXNDb250ZW50IjpbIlxyXG4vLyBGb250c1xyXG5AaW1wb3J0IHVybChodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9UmFsZXdheTozMDAsNDAwLDYwMCk7XHJcblxyXG4vLyBWYXJpYWJsZXNcclxuQGltcG9ydCBcInZhcmlhYmxlc1wiO1xyXG5cclxuYm9keSB7XHJcbiAgYmFja2dyb3VuZDogI0VDRTlFNjsgLyogZmFsbGJhY2sgZm9yIG9sZCBicm93c2VycyAqL1xyXG4gIGJhY2tncm91bmQ6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvIGxlZnQsICNFQ0U5RTYgLCAjRkZGRkZGKTsgLyogQ2hyb21lIDEwLTI1LCBTYWZhcmkgNS4xLTYgKi9cclxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gbGVmdCwgI0VDRTlFNiAsICNGRkZGRkYpOyAvKiBXM0MsIElFIDEwKy8gRWRnZSwgRmlyZWZveCAxNissIENocm9tZSAyNissIE9wZXJhIDEyKywgU2FmYXJpIDcrICovXHJcbn1cclxuXHJcbi5tYWluLWNvbnRlbnQge1xyXG4gIG1hcmdpbi10b3A6IDUwcHg7XHJcbn1cclxuXHJcbi5mcm9udC1sb2dvLWNvbnRhaW5lciB7XHJcbiAgYmFja2dyb3VuZDogIzIyMjIyMjtcclxuICB3aWR0aDogNDAlO1xyXG59XHJcblxyXG4uYm94LXBvc3Qge1xyXG5cclxuICBhIHtcclxuICAgIGNvbG9yOiBpbmhlcml0O1xyXG4gIH1cclxuXHJcbiAgdHJhbnNpdGlvbjogLjJzO1xyXG5cclxuICAmOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQ6ICNlZmVmZWY7XHJcbiAgfVxyXG59XHJcblxyXG4ubmF2IHtcclxuICBiYWNrZ3JvdW5kOiAkbmF2LWJnO1xyXG59XHJcblxyXG4uYmFubmVyIHtcclxuICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2ltZy9iYW5uZXIuanBnJyk7XHJcbn1cclxuXHJcbi5tZWRpYS10eXBlIGltZyB7XHJcbiAgcGFkZGluZzogNXB4O1xyXG59XHJcblxyXG4ubWVkaWEtcG9zdCB7XHJcbiAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgYm94LXNoYWRvdzogMHB4IDBweCA1cHggMXB4IGJsYWNrO1xyXG4gIHBhZGRpbmc6IDIzcHg7XHJcbn1cclxuXHJcbi5tZWRpYS1wb3N0LWNvbW1lbnQge1xyXG5cclxuXHJcbiAgbWFyZ2luLWxlZnQ6IDI1cHg7XHJcbn1cclxuXHJcbi5tZWRpYS1xdWVzdGlvbiB7XHJcblxyXG4gIGltZyB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJhY2tncm91bmQ6ICNmZWRkZTE7XHJcbiAgfVxyXG59XHJcblxyXG4ubWVkaWEtYW5zd2VyIHtcclxuXHJcbiAgaW1nIHtcclxuICAgIHdpZHRoOiA1MCU7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZWQ1ZkJCO1xyXG4gIH1cclxufVxyXG5cclxuLm1lZGlhLWFjY2VwdGVkIHtcclxuXHJcblxyXG4gIGltZyB7XHJcbiAgICB3aWR0aDogODAlO1xyXG4gICAgYmFja2dyb3VuZDogIzM0ZGVhYTtcclxuICB9XHJcbn1cclxuXHJcbi5mb3JtLWNvbW1lbnQtaGlkZGVuXHJcbntcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG5cclxuY29kZSB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcblxyXG5cclxuLypcclxuICBpY29ucyBzdHlsaW5nXHJcbiovXHJcblxyXG4uYnV0dG9uLWdyb3VwIHtcclxuICBwYWRkaW5nOiAyMHB4IDIwcHggMjBweCAwcHg7XHJcblxyXG59XHJcblxyXG4udm90ZS1ncm91cCB7XHJcbiAgbWFyZ2luLXRvcDogLTE1cHg7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIC5mYSB7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG4gIH1cclxufVxyXG5cclxuLmZhLWFycm93LWRvd25cclxue1xyXG4gIGNvbG9yOiByZWQ7XHJcbn1cclxuXHJcbi5mYS1hcnJvdy11cCB7XHJcbiAgY29sb3I6IGdyZWVuO1xyXG59XHJcblxyXG4ucGFnaW5hdGlvbiB1bCB7XHJcbiAgbWFyZ2luLWxlZnQ6MHB4O1xyXG5cclxuICBsaSB7XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gIH1cclxufVxyXG5cclxuZm9ybSB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuIiwiLy8gTmF2XHJcbiRuYXYtYmc6ICMyMjIyMjI7XHJcblxyXG4vLyBCb2R5XHJcbiRib2R5LWJnOiAjZjVmOGZhO1xyXG5cclxuLy8gQm9yZGVyc1xyXG4kbGFyYXZlbC1ib3JkZXItY29sb3I6IGRhcmtlbigkYm9keS1iZywgMTAlKTtcclxuJGxpc3QtZ3JvdXAtYm9yZGVyOiAkbGFyYXZlbC1ib3JkZXItY29sb3I7XHJcbiRuYXZiYXItZGVmYXVsdC1ib3JkZXI6ICRsYXJhdmVsLWJvcmRlci1jb2xvcjtcclxuJHBhbmVsLWRlZmF1bHQtYm9yZGVyOiAkbGFyYXZlbC1ib3JkZXItY29sb3I7XHJcbiRwYW5lbC1pbm5lci1ib3JkZXI6ICRsYXJhdmVsLWJvcmRlci1jb2xvcjtcclxuXHJcbi8vIEJyYW5kc1xyXG4kYnJhbmQtcHJpbWFyeTogIzMwOTdEMTtcclxuJGJyYW5kLWluZm86ICM4ZWI0Y2I7XHJcbiRicmFuZC1zdWNjZXNzOiAjMmFiMjdiO1xyXG4kYnJhbmQtd2FybmluZzogI2NiYjk1NjtcclxuJGJyYW5kLWRhbmdlcjogI2JmNTMyOTtcclxuXHJcbi8vIFR5cG9ncmFwaHlcclxuJGljb24tZm9udC1wYXRoOiBcIn5ib290c3RyYXAtc2Fzcy9hc3NldHMvZm9udHMvYm9vdHN0cmFwL1wiO1xyXG4kZm9udC1mYW1pbHktc2Fucy1zZXJpZjogXCJSYWxld2F5XCIsIHNhbnMtc2VyaWY7XHJcbiRmb250LXNpemUtYmFzZTogMTRweDtcclxuJGxpbmUtaGVpZ2h0LWJhc2U6IDEuNjtcclxuJHRleHQtY29sb3I6ICM2MzZiNmY7XHJcblxyXG4vLyBOYXZiYXJcclxuJG5hdmJhci1kZWZhdWx0LWJnOiAjZmZmO1xyXG5cclxuLy8gQnV0dG9uc1xyXG4kYnRuLWRlZmF1bHQtY29sb3I6ICR0ZXh0LWNvbG9yO1xyXG5cclxuLy8gSW5wdXRzXHJcbiRpbnB1dC1ib3JkZXI6IGxpZ2h0ZW4oJHRleHQtY29sb3IsIDQwJSk7XHJcbiRpbnB1dC1ib3JkZXItZm9jdXM6IGxpZ2h0ZW4oJGJyYW5kLXByaW1hcnksIDI1JSk7XHJcbiRpbnB1dC1jb2xvci1wbGFjZWhvbGRlcjogbGlnaHRlbigkdGV4dC1jb2xvciwgMzAlKTtcclxuXHJcbi8vIFBhbmVsc1xyXG4kcGFuZWwtZGVmYXVsdC1oZWFkaW5nLWJnOiAjZmZmO1xyXG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxDQUFDLGdFQUFJO0FBS1osQUFBQSxJQUFJLENBQUM7RUFDSCxVQUFVLEVBQUUsT0FBTztFQUFHLCtCQUErQjtFQUNyRCxVQUFVLEVBQUUsa0RBQW1EO0VBQUUsZ0NBQWdDO0VBQ2pHLFVBQVUsRUFBRSwwQ0FBMkM7RUFBRSxzRUFBc0U7Q0FDaEk7O0FBRUQsQUFBQSxhQUFhLENBQUM7RUFDWixVQUFVLEVBQUUsSUFBSTtDQUNqQjs7QUFFRCxBQUFBLHFCQUFxQixDQUFDO0VBQ3BCLFVBQVUsRUFBRSxPQUFPO0VBQ25CLEtBQUssRUFBRSxHQUFHO0NBQ1g7O0FBRUQsQUFBQSxTQUFTLENBQUM7RUFNUixVQUFVLEVBQUUsR0FBRztDQUtoQjs7QUFYRCxBQUVFLFNBRk8sQ0FFUCxDQUFDLENBQUM7RUFDQSxLQUFLLEVBQUUsT0FBTztDQUNmOztBQUpILEFBUUUsU0FSTyxBQVFQLE1BQU8sQ0FBQztFQUNOLFVBQVUsRUFBRSxPQUFPO0NBQ3BCOztBQUdILEFBQUEsSUFBSSxDQUFDO0VBQ0gsVUFBVSxFQ25DSCxPQUFPO0NEb0NmOztBQUVELEFBQUEsT0FBTyxDQUFDO0VBQ04sVUFBVSxFQUFFLHdCQUF3QjtDQUNyQzs7QUFFRCxBQUFZLFdBQUQsQ0FBQyxHQUFHLENBQUM7RUFDZCxPQUFPLEVBQUUsR0FBRztDQUNiOztBQUVELEFBQUEsV0FBVyxDQUFDO0VBQ1YsVUFBVSxFQUFFLEtBQUs7RUFDakIsVUFBVSxFQUFFLHFCQUFxQjtFQUNqQyxPQUFPLEVBQUUsSUFBSTtDQUNkOztBQUVELEFBQUEsbUJBQW1CLENBQUM7RUFHbEIsV0FBVyxFQUFFLElBQUk7Q0FDbEI7O0FBRUQsQUFFRSxlQUZhLENBRWIsR0FBRyxDQUFDO0VBQ0YsS0FBSyxFQUFFLElBQUk7RUFDWCxVQUFVLEVBQUUsT0FBTztDQUNwQjs7QUFHSCxBQUVFLGFBRlcsQ0FFWCxHQUFHLENBQUM7RUFDRixLQUFLLEVBQUUsR0FBRztFQUNWLFVBQVUsRUFBRSxPQUFPO0NBQ3BCOztBQUdILEFBR0UsZUFIYSxDQUdiLEdBQUcsQ0FBQztFQUNGLEtBQUssRUFBRSxHQUFHO0VBQ1YsVUFBVSxFQUFFLE9BQU87Q0FDcEI7O0FBR0gsQUFBQSxvQkFBb0IsQ0FDcEI7RUFDRSxPQUFPLEVBQUUsSUFBSTtDQUNkOztBQUdELEFBQUEsSUFBSSxDQUFDO0VBQ0gsT0FBTyxFQUFFLEtBQUs7Q0FDZjs7QUFJRDs7RUFFRTtBQUVGLEFBQUEsYUFBYSxDQUFDO0VBQ1osT0FBTyxFQUFFLGtCQUFrQjtDQUU1Qjs7QUFFRCxBQUFBLFdBQVcsQ0FBQztFQUNWLFVBQVUsRUFBRSxLQUFLO0VBQ2pCLE9BQU8sRUFBRSxJQUFJO0VBQ2IsY0FBYyxFQUFFLE1BQU07Q0FLdkI7O0FBUkQsQUFJRSxXQUpTLENBSVQsR0FBRyxDQUFDO0VBQ0YsTUFBTSxFQUFFLE9BQU87Q0FFaEI7O0FBR0gsQUFBQSxjQUFjLENBQ2Q7RUFDRSxLQUFLLEVBQUUsR0FBRztDQUNYOztBQUVELEFBQUEsWUFBWSxDQUFDO0VBQ1gsS0FBSyxFQUFFLEtBQUs7Q0FDYjs7QUFFRCxBQUFZLFdBQUQsQ0FBQyxFQUFFLENBQUM7RUFDYixXQUFXLEVBQUMsR0FBRztDQUtoQjs7QUFORCxBQUdFLFdBSFMsQ0FBQyxFQUFFLENBR1osRUFBRSxDQUFDO0VBQ0QsVUFBVSxFQUFFLElBQUk7Q0FDakI7O0FBR0gsQUFBQSxJQUFJLENBQUM7RUFDSCxPQUFPLEVBQUUsS0FBSztFQUNkLEtBQUssRUFBRSxJQUFJO0NBQ1oifQ== */